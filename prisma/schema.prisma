generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model LearningList {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  createrId         String
  creator           Person             @relation(fields: [createrId], references: [id])
  learningMaterials LearningMaterial[]
}

model LearningMaterial {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  publisherName String

  instructors   String[]
  links         LearningMaterialLink[]
  learningLists LearningList[]

  @@unique([name, publisherName])
}

model LearningMaterialLink {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String   @unique

  learningMaterialId String?
  learningMaterial   LearningMaterial? @relation(fields: [learningMaterialId], references: [id])
}

model Person {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  username        String?  @unique
  fullName        String?
  profileImageUrl String?

  learningList LearningList[]
}
